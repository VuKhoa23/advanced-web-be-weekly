basePath: /api/v1
definitions:
  entity.Actor:
    properties:
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      lastUpdate:
        type: string
    type: object
  entity.Film:
    properties:
      description:
        type: string
      id:
        type: integer
      languageId:
        type: integer
      lastUpdate:
        type: string
      length:
        type: integer
      originalLanguageId:
        type: integer
      rating:
        type: string
      releaseYear:
        type: integer
      rentalDuration:
        type: integer
      rentalRate:
        type: number
      replacementCost:
        type: number
      special_features:
        type: string
      title:
        type: string
    type: object
  model.ActorRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
    required:
    - firstName
    - lastName
    type: object
info:
  contact: {}
  description: API for Advanced Web
  title: API for Advanced Web
  version: "1.0"
paths:
  /actors:
    get:
      description: Get all actors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Actor'
            type: array
      summary: Get all actors
      tags:
      - Actor
    post:
      consumes:
      - application/json
      description: Create an actor
      parameters:
      - description: Actor payload
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/model.ActorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Actor'
      summary: Create an actor
      tags:
      - Actor
  /actors/{id}:
    get:
      description: Get an actor
      parameters:
      - description: actorId
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Actor'
      summary: Get an actor
      tags:
      - Actor
  /films/{id}:
    delete:
      description: Delete a film with the given ID
      parameters:
      - description: filmId
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Film deleted successfully
      summary: Delete a film
      tags:
      - Film
    get:
      description: Get a film with the given ID
      parameters:
      - description: filmId
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Film'
      summary: Get a film
      tags:
      - Film
swagger: "2.0"
